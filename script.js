// ==UserScript==
// @name         geoguesser exploit
// @namespace    http://tampermonkey.net/
// @version      2024-03-01
// @description  try to take over the world!
// @author       You
// @match        https://www.geoguessr.com/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=geoguessr.com
// @grant        GM_webRequest
// @require      https://greasyfork.org/scripts/470000/code/GM%20Requests.js
// ==/UserScript==

let globalCoordinates = { // keep this stored globally, and we'll keep updating it for each API call.
  lat: 0,
  lng: 0
}

let manualRequest = {
  "token": "",
  "lat": 0,
  "lng": 0,
  "timedOut": false
}

// Below, I intercept the API call to Google Street view and view the result before it reaches the client.
// Then I simply do some regex over the response string to find the coordinates, which Google gave to us in the response data
// I then update a global variable above, with the correct coordinates, each time we receive a response from Google.

var originalOpen = XMLHttpRequest.prototype.open;
XMLHttpRequest.prototype.open = function(method, url) {
  console.log(method);
  console.log(url);

  // Intercepting Google Maps API for coordinates
  if (url.startsWith('https://maps.googleapis.com/$rpc/google.internal.maps.mapsjs.v1.MapsJsInternalService/GetMetadata')) {
      this.addEventListener('load', function () {
          let interceptedResult = this.responseText;
          const pattern = /-?\d+\.\d+,-?\d+\.\d+/g;
          let match = interceptedResult.match(pattern)[0];
          let split = match.split(",");

          let lat = Number.parseFloat(split[0]);
          let lng = Number.parseFloat(split[1]);

          globalCoordinates.lat = lat;
          globalCoordinates.lng = lng;
          manualRequest.token = extractGameIdFromUrl();

          manualRequest.lat = lat;
          manualRequest.lng = lng;
          //console.log(manualRequest);
      });
  }

  // Call the original open function
  return originalOpen.apply(this, arguments);
};

// ====================================Place Marker====================================

function extractGameIdFromUrl() {
  const urlPath = window.location.pathname;
  const pathSegments = urlPath.split("/"); // Split the URL path by '/'

  // Assuming the game ID is always the last segment of the URL path after '/game/'
  const gameIdIndex = pathSegments.findIndex(segment => segment === "game") + 1;

  // Check if the game ID index is valid and return the game ID
  if (gameIdIndex > 0 && gameIdIndex < pathSegments.length) {
      return pathSegments[gameIdIndex];
  }

  return null; // Return null if the game ID is not found
}

// ====================================Place Marker For You====================================

function placeMarker() {
  const { token, lat, lng } = manualRequest; // Extracting the required information from your object

  // URL of the GeoGuessr API endpoint for placing a marker (this is a placeholder)
  const endpointUrl = `https://www.geoguessr.com/api/v3/games/${token}`;

  // Create a new instance of XMLHttpRequest
  var xhr = new XMLHttpRequest();

  // Open a new connection, using the POST request on the URL endpoint
  xhr.open("POST", endpointUrl, true);
  xhr.withCredentials = true; // To include cookies in cross-origin requests

  // Set up the request headers as needed
  xhr.setRequestHeader("Content-Type", "application/json");
  // Include additional headers as necessary, e.g., for authentication

  // Define what happens on successful data submission
  xhr.onload = function () {
      if (xhr.status >= 200 && xhr.status < 300) {
          // Parse the JSON response
          var response = JSON.parse(xhr.responseText);
          console.log('Marker placed successfully:', response);
          // Handle the response data here
      } else {
          // Handle errors here
          console.error('Error placing marker:', xhr.statusText);
      }
  };

  // Define what happens in case of an error
  xhr.onerror = function () {
      console.error('Request failed');
  };

  let payload = JSON.stringify(manualRequest);

  // Send the request with the JSON body
  xhr.send(payload);
}

// ====================================Controls,setup, etc.====================================


let onKeyDown = (e) => {
  if (e.keyCode === 49) {
      e.preventDefault();
      e.stopImmediatePropagation(); // tries to prevent the key from being hijacked by geoguessr
      placeMarker(true)
  }
  if (e.keyCode === 50) {
      e.preventDefault();
      e.stopImmediatePropagation();
      placeMarker(false)
  }
  if (e.keyCode === 51) {
      e.preventDefault();
      e.stopImmediatePropagation();
      mapsFromCoords(false)
  }
}

document.addEventListener("keydown", onKeyDown);